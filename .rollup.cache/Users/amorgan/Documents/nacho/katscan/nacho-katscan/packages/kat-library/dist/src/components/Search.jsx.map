{"version":3,"file":"Search.jsx","sourceRoot":"","sources":["../../../src/components/Search.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { MagnifyingGlassIcon, CircleStackIcon } from \"@heroicons/react/24/solid\";\n\ninterface SearchProps {\n  placeholder?: string;\n  onSearch?: (query: string) => void;\n  suggestions?: { tick: string; image?: string }[]; \n  showHint?: boolean;\n  enableAutocomplete?: boolean; \n}\n\nconst SearchComponent: React.FC<SearchProps> = ({\n  placeholder = \"Search...\",\n  onSearch,\n  suggestions = [],\n  showHint = false,\n  enableAutocomplete = false, \n}) => {\n  const [query, setQuery] = useState(\"\");\n  const [filteredSuggestions, setFilteredSuggestions] = useState<{ tick: string; image?: string }[]>([]);\n  const [hintVisible, setHintVisible] = useState(showHint);\n  const [showAutocomplete, setShowAutocomplete] = useState(false);\n\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newQuery = event.target.value;\n    setQuery(newQuery);\n    setHintVisible(true);\n\n    if (enableAutocomplete) {\n      if (newQuery.trim() === \"\") {\n        setShowAutocomplete(false);\n        setFilteredSuggestions([]);\n      } else {\n        const filtered = suggestions.filter((item) =>\n          item.tick.toLowerCase().includes(newQuery.toLowerCase())\n        );\n        setFilteredSuggestions(filtered);\n        setShowAutocomplete(filtered.length > 0);\n      }\n    }\n  };\n\n  const handleKeyDown = (event: React.KeyboardEvent<HTMLInputElement>) => {\n    if (event.key === \"Enter\" && onSearch) {\n      onSearch(query);\n      setHintVisible(false);\n      setShowAutocomplete(false);\n      setFilteredSuggestions([]);\n    }\n  };\n\n  const handleSuggestionClick = (suggestion: string) => {\n    setQuery(suggestion);\n    setShowAutocomplete(false);\n    setFilteredSuggestions([]);\n    if (onSearch) onSearch(suggestion);\n  };\n\n  return (\n    <div className=\"relative w-full max-w-sm\">\n      <MagnifyingGlassIcon className=\"absolute left-3 top-3 h-5 w-5 text-gray-500 dark:text-gray-400\" />\n      <input\n        type=\"text\"\n        value={query}\n        onChange={handleInputChange}\n        onKeyDown={handleKeyDown}\n        className=\"pl-10 pr-4 py-2 w-full border border-gray-300 dark:border-gray-700 rounded-lg focus:ring-2 focus:ring-primary-500 focus:outline-none bg-white dark:bg-gray-900 text-gray-800 dark:text-white\"\n        placeholder={placeholder}\n      />\n      {hintVisible && showHint && query && (\n        <p className=\"absolute left-10 top-full mt-1 text-xs text-gray-500 dark:text-gray-400\">\n          Press <span className=\"font-semibold\">Enter</span> to search\n        </p>\n      )}\n      {enableAutocomplete && showAutocomplete && filteredSuggestions.length > 0 && (\n        <ul className=\"absolute left-0 mt-2 w-full bg-white dark:bg-gray-800 border border-gray-300 dark:border-gray-700 shadow-lg rounded-lg max-h-40 overflow-y-auto z-10\">\n          {filteredSuggestions.map((item, index) => (\n            <li\n              key={index}\n              onClick={() => handleSuggestionClick(item.tick)}\n              className=\"flex items-center px-4 py-2 cursor-pointer text-gray-700 dark:text-white hover:bg-gray-100 dark:hover:bg-gray-700\"\n            >\n              {item.image ? (\n                <img\n                  src={item.image}\n                  alt={item.tick}\n                  className=\"w-6 h-6 rounded-full mr-2\"\n                />\n              ) : (\n                <CircleStackIcon className=\"w-6 h-6 text-gray-400 mr-2\" />\n              )}\n              {item.tick}\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default SearchComponent;\n"]}