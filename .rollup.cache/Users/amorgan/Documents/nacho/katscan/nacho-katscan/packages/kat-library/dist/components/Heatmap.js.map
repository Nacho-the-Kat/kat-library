{"version":3,"file":"Heatmap.js","sourceRoot":"","sources":["../../src/components/Heatmap.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Group } from '@visx/group';\nimport genBins, { Bin, Bins } from '@visx/mock-data/lib/generators/genBins';\nimport { scaleLinear } from '@visx/scale';\nimport { HeatmapCircle, HeatmapRect } from '@visx/heatmap';\nimport { getSeededRandom } from '@visx/mock-data';\n\nconst hot1 = '#77312f';\nconst hot2 = '#f33d15';\nconst cool1 = '#122549';\nconst cool2 = '#b4fbde';\nexport const background = '#28272c';\n\nconst seededRandom = getSeededRandom(0.41);\n\nconst binData = genBins(\n  16,\n  16,\n  (idx) => 150 * idx,\n  (i, number) => 25 * (number - i) * seededRandom(),\n);\n\nfunction max<Datum>(data: Datum[], value: (d: Datum) => number): number {\n  return Math.max(...data.map(value));\n}\n\nfunction min<Datum>(data: Datum[], value: (d: Datum) => number): number {\n  return Math.min(...data.map(value));\n}\n\nconst bins = (d: Bins) => d.bins;\nconst count = (d: Bin) => d.count;\n\nconst colorMax = max(binData, (d) => max(bins(d), count));\nconst bucketSizeMax = max(binData, (d) => bins(d).length);\n\nconst xScale = scaleLinear<number>({ domain: [0, binData.length] });\nconst yScale = scaleLinear<number>({ domain: [0, bucketSizeMax] });\nconst circleColorScale = scaleLinear<string>({ range: [hot1, hot2], domain: [0, colorMax] });\nconst rectColorScale = scaleLinear<string>({ range: [cool1, cool2], domain: [0, colorMax] });\nconst opacityScale = scaleLinear<number>({ range: [0.1, 1], domain: [0, colorMax] });\n\nexport type HeatmapProps = {\n  width: number;\n  height: number;\n  type?: 'circle' | 'square';\n  margin?: { top: number; right: number; bottom: number; left: number };\n  separation?: number;\n  events?: boolean;\n  hover?: boolean;\n  borderOnHover?: boolean;\n};\n\nconst defaultMargin = { top: 10, left: 20, right: 20, bottom: 110 };\n\nfunction Heatmap({\n  width,\n  height,\n  type = 'circle',\n  events = false,\n  hover = false,\n  borderOnHover = false,\n  margin = defaultMargin,\n  separation = 20,\n}: HeatmapProps) {\n  const [tooltipData, setTooltipData] = useState<null | { row: number; column: number }> (null);\n  const size = width > margin.left + margin.right ? width - margin.left - margin.right - separation : width;\n  const xMax = size / 2;\n  const yMax = height - margin.bottom - margin.top;\n\n  const binWidth = xMax / binData.length;\n  const binHeight = yMax / bucketSizeMax;\n  const radius = min([binWidth, binHeight], (d) => d) / 2;\n\n  xScale.range([0, xMax]);\n  yScale.range([yMax, 0]);\n\n  return width < 10 ? null : (\n    <svg width={width} height={height}>\n      <rect x={0} y={0} width={width} height={height} rx={14} fill={background} />\n      <Group top={margin.top} left={margin.left}>\n        {type === 'circle' ? (\n          <HeatmapCircle\n            data={binData}\n            xScale={(d) => xScale(d) ?? 0}\n            yScale={(d) => yScale(d) ?? 0}\n            colorScale={circleColorScale}\n            opacityScale={opacityScale}\n            radius={radius}\n            gap={2}\n          >\n            {(heatmap) =>\n              heatmap.map((heatmapBins) =>\n                heatmapBins.map((bin) => (\n                  <circle\n                    key={`heatmap-circle-${bin.row}-${bin.column}`}\n                    className=\"visx-heatmap-circle\"\n                    cx={bin.cx}\n                    cy={bin.cy}\n                    r={bin.r}\n                    fill={bin.color}\n                    fillOpacity={bin.opacity}\n                    stroke={borderOnHover && tooltipData?.row === bin.row && tooltipData?.column === bin.column ? 'black' : 'none'}\n                    strokeWidth={borderOnHover ? 2 : 0}\n                    onMouseEnter={() => hover && setTooltipData({ row: bin.row, column: bin.column })}\n                    onMouseLeave={() => hover && setTooltipData(null)}\n                    onClick={() => {\n                      if (!events) return;\n                      alert(JSON.stringify({ row: bin.row, column: bin.column, bin: bin.bin }));\n                    }}\n                  />\n                )),\n              )\n            }\n          </HeatmapCircle>\n        ) : (\n          <HeatmapRect\n            data={binData}\n            xScale={(d) => xScale(d) ?? 0}\n            yScale={(d) => yScale(d) ?? 0}\n            colorScale={rectColorScale}\n            opacityScale={opacityScale}\n            binWidth={binWidth}\n            binHeight={binWidth}\n            gap={2}\n          >\n            {(heatmap) =>\n              heatmap.map((heatmapBins) =>\n                heatmapBins.map((bin) => (\n                  <rect\n                    key={`heatmap-rect-${bin.row}-${bin.column}`}\n                    className=\"visx-heatmap-rect\"\n                    width={bin.width}\n                    height={bin.height}\n                    x={bin.x}\n                    y={bin.y}\n                    fill={bin.color}\n                    fillOpacity={bin.opacity}\n                    stroke={borderOnHover && tooltipData?.row === bin.row && tooltipData?.column === bin.column ? 'black' : 'none'}\n                    strokeWidth={borderOnHover ? 2 : 0}\n                    onMouseEnter={() => hover && setTooltipData({ row: bin.row, column: bin.column })}\n                    onMouseLeave={() => hover && setTooltipData(null)}\n                    onClick={() => {\n                      if (!events) return;\n                      alert(JSON.stringify({ row: bin.row, column: bin.column, bin: bin.bin }));\n                    }}\n                  />\n                )),\n              )\n            }\n          </HeatmapRect>\n        )}\n      </Group>\n    </svg>\n  );\n}\n\nexport default Heatmap;\n"]}