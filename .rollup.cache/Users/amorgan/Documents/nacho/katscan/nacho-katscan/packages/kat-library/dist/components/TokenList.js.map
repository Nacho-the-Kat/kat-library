{"version":3,"file":"TokenList.js","sourceRoot":"","sources":["../../src/components/TokenList.tsx"],"names":[],"mappings":";AAAA,OAAc,EAAE,QAAQ,EAAE,MAAM,OAAO,CAAC;AACxC,OAAO,EAAE,eAAe,EAAE,MAAM,2BAA2B,CAAC;AAC5D,OAAO,EAAE,eAAe,EAAE,MAAM,6BAA6B,CAAC;AAmB9D,MAAM,SAAS,GAAwB,CAAC,EACtC,KAAK,EACL,IAAI,EACJ,MAAM,EACN,MAAM,EACN,QAAQ,GAAG,EAAE,EACb,WAAW,GACZ,EAAE,EAAE;IACH,MAAM,CAAC,OAAO,EAAE,UAAU,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC;IAC9C,MAAM,eAAe,GAAG,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC;IAErE,OAAO,CACL,eAAK,SAAS,EAAC,yGAAyG,aAEtH,eAAK,SAAS,EAAC,iDAAiD,aAC9D,eAAK,SAAS,EAAC,mBAAmB,aAC/B,IAAI,IAAI,eAAM,SAAS,EAAC,kCAAkC,YAAE,IAAI,GAAQ,EACzE,aAAI,SAAS,EAAC,0DAA0D,YAAE,KAAK,GAAM,IACjF,EACL,MAAM,IAAI,CACT,eAAM,SAAS,EAAC,kDAAkD,YAAE,MAAM,GAAQ,CACnF,IACG,EAGN,cAAK,SAAS,EAAC,gBAAgB,YAC5B,eAAe,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,KAAK,EAAE,EAAE,CAAC,CACrC,eAAiB,SAAS,EAAC,mCAAmC,aAE5D,eAAM,SAAS,EAAC,8CAA8C,YAAE,KAAK,GAAG,CAAC,GAAQ,EAGjF,cAAK,SAAS,EAAC,yGAAyG,YACrH,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CACb,cAAK,GAAG,EAAE,KAAK,CAAC,KAAK,EAAE,GAAG,EAAE,KAAK,CAAC,IAAI,EAAE,SAAS,EAAC,4BAA4B,GAAG,CAClF,CAAC,CAAC,CAAC,CACF,KAAC,eAAe,IAAC,SAAS,EAAC,uBAAuB,GAAG,CACtD,GACG,EAGN,eAAK,SAAS,EAAC,aAAa,aAC1B,YAAG,IAAI,EAAE,gBAAgB,KAAK,CAAC,IAAI,EAAE,EAAE,SAAS,EAAC,+DAA+D,YAC7G,KAAK,CAAC,IAAI,GACT,EACJ,YAAG,SAAS,EAAC,0CAA0C,YAAE,KAAK,CAAC,KAAK,IAAI,WAAW,GAAK,IACpF,EAGL,KAAK,CAAC,MAAM,KAAK,SAAS,IAAI,CAC7B,eACE,SAAS,EAAE,kCACT,KAAK,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC,CAAC,6BAA6B,CAAC,CAAC,CAAC,yBACtD,EAAE,YAED,KAAK,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,MAAM,GAAG,GACxD,CACR,KA9BO,KAAK,CA+BT,CACP,CAAC,GACE,EAGL,MAAM,CAAC,MAAM,GAAG,QAAQ,IAAI,CAC3B,aACE,IAAI,EAAE,WAAW,EACjB,SAAS,EAAC,wFAAwF,0BAGlG,KAAC,eAAe,IAAC,SAAS,EAAC,cAAc,GAAG,IAC1C,CACL,IACG,CACP,CAAC;AACJ,CAAC,CAAC;AAEF,eAAe,SAAS,CAAC","sourcesContent":["import React, { useState } from \"react\";\nimport { ChevronDownIcon } from \"@heroicons/react/24/solid\";\nimport { CircleStackIcon } from \"@heroicons/react/24/outline\";\n\ninterface Token {\n  tick: string;\n  image?: string;\n  price?: string;\n  change?: number;\n}\n\ninterface ListProps {\n  title: string;\n  icon?: React.ReactNode;\n  legend?: string;\n  legendRight?: boolean;\n  tokens: Token[];\n  maxItems?: number;\n  showMoreUrl?: string;\n}\n\nconst TokenList: React.FC<ListProps> = ({\n  title,\n  icon,\n  legend,\n  tokens,\n  maxItems = 10,\n  showMoreUrl,\n}) => {\n  const [showAll, setShowAll] = useState(false);\n  const displayedTokens = showAll ? tokens : tokens.slice(0, maxItems);\n\n  return (\n    <div className=\"bg-white dark:bg-gray-900 shadow-md rounded-lg p-4 border border-gray-200 dark:border-gray-700 max-w-md\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between border-b pb-2\">\n        <div className=\"flex items-center\">\n          {icon && <span className=\"text-gray-500 dark:text-gray-300\">{icon}</span>}\n          <h3 className=\"ml-2 text-lg font-semibold text-gray-900 dark:text-white\">{title}</h3>\n        </div>\n        {legend && (\n          <span className=\"ml-auto text-sm text-gray-600 dark:text-gray-400\">{legend}</span>\n        )}\n      </div>\n\n      {/* Token List */}\n      <div className=\"mt-3 space-y-3\">\n        {displayedTokens.map((token, index) => (\n          <div key={index} className=\"flex items-center justify-between\">\n            {/* Index */}\n            <span className=\"text-sm text-gray-500 dark:text-gray-400 w-6\">{index + 1}</span>\n\n            {/* Token Image */}\n            <div className=\"w-8 h-8 rounded-full overflow-hidden bg-gray-200 dark:bg-gray-700 flex items-center justify-center ml-4\">\n              {token.image ? (\n                <img src={token.image} alt={token.tick} className=\"w-full h-full object-cover\" />\n              ) : (\n                <CircleStackIcon className=\"w-6 h-6 text-gray-400\" />\n              )}\n            </div>\n\n            {/* Token Name & Price */}\n            <div className=\"flex-1 ml-3\">\n              <a href={`/token/krc20/${token.tick}`} className=\"text-gray-900 dark:text-white font-medium hover:text-teal-500\">\n                {token.tick}\n              </a>\n              <p className=\"text-xs text-gray-500 dark:text-gray-400\">{token.price || \"$0.000000\"}</p>\n            </div>\n\n            {/* Price Change Badge */}\n            {token.change !== undefined && (\n              <span\n                className={`px-2 py-1 text-xs rounded-full ${\n                  token.change >= 0 ? \"bg-green-100 text-green-700\" : \"bg-red-100 text-red-700\"\n                }`}\n              >\n                {token.change >= 0 ? `+${token.change}%` : `${token.change}%`}\n              </span>\n            )}\n          </div>\n        ))}\n      </div>\n\n      {/* Show More */}\n      {tokens.length > maxItems && (\n        <a\n          href={showMoreUrl}\n          className=\"w-full mt-3 text-sm text-teal-500 flex items-center justify-center hover:text-teal-700\"\n        >\n          Show More\n          <ChevronDownIcon className=\"w-4 h-4 ml-1\" />\n        </a>\n      )}\n    </div>\n  );\n};\n\nexport default TokenList;\n"]}